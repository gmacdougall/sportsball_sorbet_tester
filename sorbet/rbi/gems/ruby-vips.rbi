# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ruby-vips/all/ruby-vips.rbi
#
# ruby-vips-2.1.2

module GObject
  def g_object_get_property(*arg0); end
  def g_object_ref(*arg0); end
  def g_object_set_property(*arg0); end
  def g_object_unref(*arg0); end
  def g_param_spec_get_blurb(*arg0); end
  def g_signal_connect_data(*arg0); end
  def g_type_from_name(*arg0); end
  def g_type_fundamental(*arg0); end
  def g_type_init(*arg0); end
  def g_type_name(*arg0); end
  def g_value_get_boolean(*arg0); end
  def g_value_get_double(*arg0); end
  def g_value_get_enum(*arg0); end
  def g_value_get_flags(*arg0); end
  def g_value_get_int(*arg0); end
  def g_value_get_object(*arg0); end
  def g_value_get_string(*arg0); end
  def g_value_get_uint64(*arg0); end
  def g_value_init(*arg0); end
  def g_value_set_boolean(*arg0); end
  def g_value_set_double(*arg0); end
  def g_value_set_enum(*arg0); end
  def g_value_set_flags(*arg0); end
  def g_value_set_int(*arg0); end
  def g_value_set_object(*arg0); end
  def g_value_set_string(*arg0); end
  def g_value_set_uint64(*arg0); end
  def g_value_unset(*arg0); end
  def self.g_object_get_property(*arg0); end
  def self.g_object_ref(*arg0); end
  def self.g_object_set_property(*arg0); end
  def self.g_object_unref(*arg0); end
  def self.g_param_spec_get_blurb(*arg0); end
  def self.g_signal_connect_data(*arg0); end
  def self.g_type_from_name(*arg0); end
  def self.g_type_fundamental(*arg0); end
  def self.g_type_init(*arg0); end
  def self.g_type_name(*arg0); end
  def self.g_value_get_boolean(*arg0); end
  def self.g_value_get_double(*arg0); end
  def self.g_value_get_enum(*arg0); end
  def self.g_value_get_flags(*arg0); end
  def self.g_value_get_int(*arg0); end
  def self.g_value_get_object(*arg0); end
  def self.g_value_get_string(*arg0); end
  def self.g_value_get_uint64(*arg0); end
  def self.g_value_init(*arg0); end
  def self.g_value_set_boolean(*arg0); end
  def self.g_value_set_double(*arg0); end
  def self.g_value_set_enum(*arg0); end
  def self.g_value_set_flags(*arg0); end
  def self.g_value_set_int(*arg0); end
  def self.g_value_set_object(*arg0); end
  def self.g_value_set_string(*arg0); end
  def self.g_value_set_uint64(*arg0); end
  def self.g_value_unset(*arg0); end
  extend FFI::Library
end
class GObject::GObject
  def [](*args, &block); end
  def ffi_managed_struct; end
  def ffi_struct; end
  def initialize(ptr); end
  def ptr; end
  def references; end
  def self.ffi_managed_struct; end
  def self.ffi_struct; end
  def self.ptr(*args, &block); end
  def to_ptr(*args, &block); end
  extend Forwardable
  extend SingleForwardable
end
module GObject::GObject::GObjectLayout
  def self.included(base); end
end
class GObject::GObject::ManagedStruct < FFI::ManagedStruct
  def self.release(ptr); end
  include GObject::GObject::GObjectLayout
end
class GObject::GObject::Struct < FFI::Struct
  include GObject::GObject::GObjectLayout
end
class GObject::GParamSpec < FFI::Struct
end
class GObject::GParamSpecPtr < FFI::Struct
end
class GObject::GValue < FFI::ManagedStruct
  def get; end
  def init(gtype); end
  def self.alloc; end
  def self.from_nick(gtype, value); end
  def self.release(ptr); end
  def self.to_nick(gtype, enum_value); end
  def set(value); end
  def unset; end
end
class Object < BasicObject
  def library_name(name, abi_number); end
end
module GLib
  def g_free(*arg0); end
  def g_log_remove_handler(*arg0); end
  def g_log_set_handler(*arg0); end
  def g_malloc(*arg0); end
  def self.g_free(*arg0); end
  def self.g_log_remove_handler(*arg0); end
  def self.g_log_set_handler(*arg0); end
  def self.g_malloc(*arg0); end
  def self.logger; end
  def self.logger=(arg0); end
  def self.remove_log_handler; end
  def self.set_log_domain(domain); end
  extend FFI::Library
end
module Vips
  extend FFI::Library
end
